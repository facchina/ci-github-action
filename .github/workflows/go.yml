# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: run on ubuntu latest with go ${{ matrix.go_version }} version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: ['1.19', '1.17', '>=1.19']
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go_version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}
      
    - name: Build DB 
      run: docker compose build 
      
    - name: Create DB
      run: docker compose up -d

    - name: Test
      run: go test -v main_test.go

  build: 
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: go build -v main.go
      
  changed-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 2
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/*.txt

      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
      - shell: pwsh
        run: |  
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git grep -q "trechos de c√≥digo" ${{ steps.changed-files-specific.outputs.all_changed_files }}
          if ([ $? -eq 0 ] ; then todos os arquivos tem o trecho buscado ; else echo algum arquivo nao tem o trecho buscado ; fi
